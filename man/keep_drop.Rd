% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keep_drop.R
\name{keep_drop}
\alias{keep_drop}
\alias{keep_dbh_min}
\alias{keep_dbh_max}
\alias{keep_dbh_under}
\alias{keep_dbh_over}
\alias{keep_status}
\alias{drop_status}
\title{Keep and drop rows of a dataframe.}
\usage{
keep_dbh_min(dfm, x, na.rm = FALSE)

keep_dbh_max(dfm, x, na.rm = FALSE)

keep_dbh_under(dfm, x, na.rm = FALSE)

keep_dbh_over(dfm, x, na.rm = FALSE)

keep_status(dfm, x, na.rm = FALSE)

drop_status(dfm, x, na.rm = FALSE)
}
\arguments{
\item{dfm}{Dataframe; A ForestGEO stem- or tree-table.}

\item{x}{An atomic vector; a single value against to compare each value of
the variable encoded in the function name.}

\item{na.rm}{Set to \code{TRUE} if you want to remove missing values from the
variable encoded in the function name.}
}
\value{
Dataframe rows with matching conditions.
}
\description{
These functions provide an expressive and convenient way to filter
ForestGEO's data. They let you remove missing values (with \code{na.rm = TRUE})
but conservatively default to keeping NAs. This behavior is similar to base
subsetting and unlike \code{dplyr::filter()}; this conservative default matters
because the difference is important between missing trees and dead trees --
and you may want to include missing trees in your analysis.
}
\examples{
cns <- data.frame(
  dbh = c(0, 50, 100, 150, NA, NA, NA),
  status = c(rep("A", 4), "M", "D", NA)
  # stringsAsFactors = FALSE
)
cns

# <=
keep_dbh_max(cns, 100)
keep_dbh_max(cns, 100, na.rm = TRUE)
# >=
keep_dbh_min(cns, 100)
keep_dbh_min(cns, 100, na.rm = TRUE)
# <
keep_dbh_under(cns, 100)
keep_dbh_under(cns, 100, na.rm = TRUE)
# >
keep_dbh_over(cns, 100)
keep_dbh_over(cns, 100, na.rm = TRUE)
# Same, but `subset()` does not let you keep NAs.
subset(cns, dbh > 100)

# ==
keep_status(cns, "A")
keep_status(cns, "A", na.rm = TRUE)
# !=
drop_status(cns, "D")
drop_status(cns, "D", na.rm = TRUE)

# Compose
keep_dbh_over(drop_status(cns, "D", na.rm = TRUE), 100)
}
\seealso{
\code{dplyr::filter()}, \code{[}.
}
